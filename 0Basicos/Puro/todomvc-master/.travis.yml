# You must sign into travis-ci.org and set the commit hook on your project for travis to
# run on your project. The secure: variable must be generated by running `travis encrypt`
# on a github oauth key that you can generate using curl.

sudo: false
language: node_js
node_js:
  - 10.13
# if using Ubuntu 16 need this library
# https://github.com/cypress-io/cypress-documentation/pull/1647
addons:
  apt:
    packages:
    - libgconf-2-4

notifications:
  irc: 'irc.freenode.org#tastejs'
cache:
  directories:
    - tooling/node_modules
    - tests/node_modules
    - node_modules
env:
  global:
    # GH_OAUTH_TOKEN is the oauth token generated as described at
    # https://help.github.com/articles/creating-an-oauth-token-for-command-line-use
    #
    # curl -u 'username' -d '{"scopes":["repo"],"note":"push to gh-pages from travis"}' https://api.github.com/authorizations
    #
    # It must be encrypted using the travis gem
    # http://about.travis-ci.org/docs/user/build-configuration/#Secure-environment-variables
    #
    # travis encrypt GH_OAUTH_TOKEN=XXXXXXXXXXXXXXX
    #
    # User specific env variables
    - secure: 'fHgfjMpYuliwMr2QLnjYZExIViNrxprf9dhXRBLZ6P9Hz7P6m1BMYrI/xEG8X+fFbCi0+n3AXh8SEMHi9ou/Pty/cx12z4w/z3B2BHMxh4XBwpZHs+AB4IXkLiwwWoP4QFy4vTipgYnMDMq9CRhlRbhZEpenQBmaTEc472By1uM='
    - GH_OWNER: tastejs
    - GH_PROJECT_NAME: todomvc
    - CHROME_PATH: '/home/travis/build/tastejs/todomvc/chrome-linux/chrome'

#update npm to latest stable version
before_install:
  - npm install --global npm@6.10.0

# common build steps for each test job
defaults: &defaults
  script:
    - echo Testing $CYPRESS_framework
    - $(npm bin)/print-env TRAVIS
    - npm run test

jobs:
  include:
    # install NPM dependencies before each test job
    - stage: npm ci
      script:
        - npm ci
        - $(npm bin)/print-env TRAVIS
    # define a separate script for each "examples/*" folder
    # this will run it in a separate job on TravisCI
    # all these jobs belong to same stage "test" thus will run in parallel
    - stage: test
      env:
        - CYPRESS_framework=angular-dart
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=angular2
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=angularjs
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=aurelia
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=backbone
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=backbone_marionette
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=backbone_require
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=binding-scala
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=canjs
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=canjs_require
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=closure
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=dijon
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=dojo
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=duel
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=emberjs
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=enyo_backbone
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=exoskeleton
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=jquery
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=js_of_ocaml
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=jsblocks
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=knockback
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=knockoutjs
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=knockoutjs_require
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=kotlin-react
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=lavaca_require
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=mithril
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=polymer
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=ractive
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=react
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=react-alt
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=react-backbone
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=reagent
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=riotjs
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=scalajs-react
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=typescript-angular
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=typescript-backbone
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=typescript-react
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=vanilla-es6
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=vanillajs
      <<: *defaults
    - stage: test
      env:
        - CYPRESS_framework=vue
      <<: *defaults
